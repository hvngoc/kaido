def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    //compileSdkVersion 31
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "vn.propzy.sam"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 300000000
        versionName "3.0.0"
        manifestPlaceholders += [
                'appAuthRedirectScheme': 'vn.propzy.sam'
        ]
    }

    signingConfigs {
        release {
            keyAlias 'propzy'

            keyPassword 'propzy2018'
            storeFile file('keystore/sam.jks')
            storePassword 'propzy2018'
        }
    }

    flavorDimensions "env"
    productFlavors {
        development {
            dimension "env"
            applicationIdSuffix ".dev"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            resValue "string", "app_name", "@string/app_name_dev"
        }
        uat {
            dimension "env"
            versionNameSuffix "-dev"
            resValue "string", "app_name", "@string/app_name_uat"
        }
        training {
            dimension "env"
            versionNameSuffix "-staging"
            resValue "string", "app_name", "@string/app_name_training"
        }
        preprod {
            dimension "env"
            versionNameSuffix "-preprod"
            resValue "string", "app_name", "@string/app_name_preprod"
        }
        production {
            dimension "env"
            resValue "string", "app_name", "@string/app_name_release"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        profile {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
